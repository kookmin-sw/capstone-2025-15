<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>파일 업로드 (Signed URL)</title>
</head>
<body>
<h1>GCS 직접 업로드 테스트</h1>
<input type="file" id="videoInput"/>
<button onclick="upload()">업로드</button>
<pre id="log"></pre>

<script>
    async function upload() {
        const file = document.getElementById("videoInput").files[0];
        if (!file) return alert("파일을 선택하세요");

        const uuid = crypto.randomUUID();
        const filename = `uploads/${uuid}.mp4`;

        // 1. 서버에 Signed URL 요청
        const signedRes = await fetch(`/signed-url?filename=${filename}`);
        const {url} = await signedRes.json();

        // 2. Signed URL로 직접 업로드
        const uploadRes = await fetch(url, {
            method: "PUT",
            headers: {"Content-Type": "video/mp4"},
            body: file
        });

        if (!uploadRes.ok) {
            document.getElementById("log").textContent = "❌ 업로드 실패";
            return;
        }

        document.getElementById("log").textContent = `✅ 업로드 성공: ${filename}`;

        // 3. 업로드 완료 후 처리 요청
        const processRes = await fetch('/process', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({uuid, filename})
        });

        const result = await processRes.json();
        document.getElementById("log").textContent += "\n" + JSON.stringify(result, null, 2);
    }
</script>
</body>
</html>
